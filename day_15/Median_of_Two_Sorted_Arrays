Question:
     Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

     The overall run time complexity should be O(log (m+n)).


     Test Case 1:
     Input1: 
          nums1 = [1,3], nums2 = [2]
     Output:
         2.00000
     Explanation:
         merged array = [1,2,3] and median is 2.
     Test Case 2:

     Input:
         nums1 = [1,2], nums2 = [3,4]
    Output: 
         2.50000
     Explanation: 
         merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.
 

Constraints:

       nums1.length == m
       nums2.length == n
       0 <= m <= 1000
       0 <= n <= 1000
       1 <= m + n <= 2000
      -106 <= nums1[i], nums2[i] <= 106
      
  Logics: 
       class Solution {
       public double findMedianSortedArrays(int[] nums1, int[] nums2) {
          int temp[]=new int[nums1.length+nums2.length];
          int i=0,j=0,k=0;
          while(i<nums1.length&&j<nums2.length){
              if(nums1[i]<nums2[j]){
                  temp[k++]=nums1[i++];
              }
              else{
                temp[k++]=nums2[j++];
              }
          }
           if(i<nums1.length){
                while(i<nums1.length)
                temp[k++]=nums1[i++];
          }
